{"ast":null,"code":"var _jsxFileName = \"/Users/trisbus/Ho\\u0323c/ReactJs/ecommerce/src/components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { Input } from '@material-ui/core';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = _ref => {\n  _s();\n\n  let {\n    checkoutToken\n  } = _ref;\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setshippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setshippingSubdivision] = useState('');\n  const [shippingOptions, setshippingOptions] = useState([]);\n  const [shippingOption, setshippingOption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(shippingCountries).map(_ref2 => {\n    let [code, nameCou] = _ref2;\n    return {\n      id: code,\n      label: nameCou\n    };\n  });\n  const subdivisions = Object.entries(shippingSubdivisions).map(_ref3 => {\n    let [code, nameSub] = _ref3;\n    return {\n      id: code,\n      label: nameSub\n    };\n  });\n  console.log('sub', subdivisions);\n  console.log('country', countries);\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    console.log('asd', countries);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListShippingSubdivisions(countryCode);\n    setshippingSubdivisions(subdivisions);\n    setshippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shiping) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Subdivision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubdivision,\n              fullWidth: true,\n              onChange: e => setshippingSubdivision(e.target.value),\n              children: subdivisions.map(subdivision => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: subdivision.id,\n                children: subdivision.label\n              }, subdivision.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"P43+aLxDMQVNipoKb2Q7rpvRyHk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","Input","commerce","AddressForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setshippingSubdivisions","shippingSubdivision","setshippingSubdivision","shippingOptions","setshippingOptions","shippingOption","setshippingOption","methods","countries","Object","entries","map","code","nameCou","id","label","subdivisions","nameSub","console","log","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListShippingSubdivisions","shiping","e","target","value","country","subdivision"],"sources":["/Users/trisbus/HoÌ£c/ReactJs/ecommerce/src/components/CheckoutForm/AddressForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { Input } from '@material-ui/core';\nimport { commerce } from '../../lib/commerce';\n\nconst AddressForm = ({ checkoutToken }) => {\n    const [shippingCountries, setShippingCountries] = useState([])\n    const [shippingCountry, setShippingCountry] = useState('')\n    const [shippingSubdivisions, setshippingSubdivisions] = useState([])\n    const [shippingSubdivision, setshippingSubdivision] = useState('')\n    const [shippingOptions, setshippingOptions] = useState([])\n    const [shippingOption, setshippingOption] = useState('')\n\n    const methods = useForm();\n    const countries = Object.entries(shippingCountries).map(([code, nameCou]) => ({ id: code, label: nameCou }))\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, nameSub]) => ({ id: code, label: nameSub }))\n    console.log('sub',subdivisions);\n    console.log('country', countries);\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        console.log('asd', countries);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0])\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const {subdivisions}=await commerce.services.localeListShippingSubdivisions(countryCode)\n        setshippingSubdivisions(subdivisions)\n        setshippingSubdivision(Object.keys(subdivisions)[0])\n\n    }\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, [])\n\n    useEffect(()=>{\n        if(shiping)\n        fetchSubdivisions(shippingCountry);\n    },[shippingCountry])\n\n    return (\n        <>\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name' />\n                        <FormInput required name='lastName' label='Last name' />\n                        <FormInput required name='address1' label='Address' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='city' label='City' />\n                        <FormInput required name='zip' label='ZIP / Postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map(country => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setshippingSubdivision(e.target.value)}>\n                                {subdivisions.map(subdivision => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                        {subdivision.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        {/* <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Option</InputLabel>\n                            <Select value={ } fullWidth onChange={ }>\n                                <MenuItem key={ } value={ }>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid> */}\n                    </Grid>\n                </form>\n            </FormProvider>\n        </>\n\n    )\n}\n\nexport default AddressForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,UAArD,QAAuE,mBAAvE;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,iBAAtC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;;AAEA,MAAMC,WAAW,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACvC,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACmB,oBAAD,EAAuBC,uBAAvB,IAAkDpB,QAAQ,CAAC,EAAD,CAAhE;EACA,MAAM,CAACqB,mBAAD,EAAsBC,sBAAtB,IAAgDtB,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,EAAD,CAApD;EAEA,MAAM2B,OAAO,GAAGnB,OAAO,EAAvB;EACA,MAAMoB,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAef,iBAAf,EAAkCgB,GAAlC,CAAsC;IAAA,IAAC,CAACC,IAAD,EAAOC,OAAP,CAAD;IAAA,OAAsB;MAAEC,EAAE,EAAEF,IAAN;MAAYG,KAAK,EAAEF;IAAnB,CAAtB;EAAA,CAAtC,CAAlB;EACA,MAAMG,YAAY,GAAGP,MAAM,CAACC,OAAP,CAAeX,oBAAf,EAAqCY,GAArC,CAAyC;IAAA,IAAC,CAACC,IAAD,EAAOK,OAAP,CAAD;IAAA,OAAsB;MAAEH,EAAE,EAAEF,IAAN;MAAYG,KAAK,EAAEE;IAAnB,CAAtB;EAAA,CAAzC,CAArB;EACAC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,YAAlB;EACAE,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,SAAvB;;EACA,MAAMY,sBAAsB,GAAG,MAAOC,eAAP,IAA2B;IACtD,MAAM;MAAEb;IAAF,IAAgB,MAAMhB,QAAQ,CAAC8B,QAAT,CAAkBC,2BAAlB,CAA8CF,eAA9C,CAA5B;IACAH,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,SAAnB;IACAZ,oBAAoB,CAACY,SAAD,CAApB;IACAV,kBAAkB,CAACW,MAAM,CAACe,IAAP,CAAYhB,SAAZ,EAAuB,CAAvB,CAAD,CAAlB;EACH,CALD;;EAOA,MAAMiB,iBAAiB,GAAG,MAAOC,WAAP,IAAuB;IAC7C,MAAM;MAACV;IAAD,IAAe,MAAMxB,QAAQ,CAAC8B,QAAT,CAAkBK,8BAAlB,CAAiDD,WAAjD,CAA3B;IACA1B,uBAAuB,CAACgB,YAAD,CAAvB;IACAd,sBAAsB,CAACO,MAAM,CAACe,IAAP,CAAYR,YAAZ,EAA0B,CAA1B,CAAD,CAAtB;EAEH,CALD;;EAMAnC,SAAS,CAAC,MAAM;IACZuC,sBAAsB,CAAC1B,aAAa,CAACoB,EAAf,CAAtB;EACH,CAFQ,EAEN,EAFM,CAAT;EAIAjC,SAAS,CAAC,MAAI;IACV,IAAG+C,OAAH,EACAH,iBAAiB,CAAC5B,eAAD,CAAjB;EACH,CAHQ,EAGP,CAACA,eAAD,CAHO,CAAT;EAKA,oBACI;IAAA,wBACI,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAyB,YAAY,MAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,YAAD,OAAkBU,OAAlB;MAAA,uBACI;QAAM,QAAQ,EAAC,EAAf;QAAA,uBACI,QAAC,IAAD;UAAM,SAAS,MAAf;UAAgB,OAAO,EAAE,CAAzB;UAAA,wBACI,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,WAAzB;YAAqC,KAAK,EAAC;UAA3C;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,UAAzB;YAAoC,KAAK,EAAC;UAA1C;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,UAAzB;YAAoC,KAAK,EAAC;UAA1C;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,OAAzB;YAAiC,KAAK,EAAC;UAAvC;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,MAAzB;YAAgC,KAAK,EAAC;UAAtC;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI,QAAC,SAAD;YAAW,QAAQ,MAAnB;YAAoB,IAAI,EAAC,KAAzB;YAA+B,KAAK,EAAC;UAArC;YAAA;YAAA;YAAA;UAAA,QANJ,eAOI,QAAC,IAAD;YAAM,IAAI,MAAV;YAAW,EAAE,EAAE,EAAf;YAAmB,EAAE,EAAE,CAAvB;YAAA,wBACI,QAAC,UAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,MAAD;cAAQ,KAAK,EAAEV,eAAf;cAAgC,SAAS,MAAzC;cAA0C,QAAQ,EAAGgC,CAAD,IAAO/B,kBAAkB,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7E;cAAA,UACKvB,SAAS,CAACG,GAAV,CAAcqB,OAAO,iBAClB,QAAC,QAAD;gBAA2B,KAAK,EAAEA,OAAO,CAAClB,EAA1C;gBAAA,UACKkB,OAAO,CAACjB;cADb,GAAeiB,OAAO,CAAClB,EAAvB;gBAAA;gBAAA;gBAAA;cAAA,QADH;YADL;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAPJ,eAiBI,QAAC,IAAD;YAAM,IAAI,MAAV;YAAW,EAAE,EAAE,EAAf;YAAmB,EAAE,EAAE,CAAvB;YAAA,wBACI,QAAC,UAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,MAAD;cAAQ,KAAK,EAAEb,mBAAf;cAAoC,SAAS,MAA7C;cAA8C,QAAQ,EAAG4B,CAAD,IAAO3B,sBAAsB,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAArF;cAAA,UACKf,YAAY,CAACL,GAAb,CAAiBsB,WAAW,iBACzB,QAAC,QAAD;gBAA+B,KAAK,EAAEA,WAAW,CAACnB,EAAlD;gBAAA,UACKmB,WAAW,CAAClB;cADjB,GAAekB,WAAW,CAACnB,EAA3B;gBAAA;gBAAA;gBAAA;cAAA,QADH;YADL;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AA8CH,CAjFD;;GAAMrB,W;UAQcL,O;;;KARdK,W;AAmFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}