{"ast":null,"code":"var _jsxFileName = \"/Users/trisbus/Ho\\u0323c/ReactJs/ecommerce/src/components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { Input } from '@material-ui/core';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = _ref => {\n  _s();\n\n  let {\n    checkoutToken\n  } = _ref;\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setshippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setshippingSubdivision] = useState('');\n  const [shippingOptions, setshippingOptions] = useState([]);\n  const [shippingOption, setshippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    console.log('asd', countries);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"lszLNdX7CZbKckqvvmHEyBGz32o=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","Input","commerce","AddressForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setshippingSubdivisions","shippingSubdivision","setshippingSubdivision","shippingOptions","setshippingOptions","shippingOption","setshippingOption","methods","fetchShippingCountries","checkoutTokenId","countries","services","localeListShippingCountries","console","log","Object","keys","id"],"sources":["/Users/trisbus/HoÌ£c/ReactJs/ecommerce/src/components/CheckoutForm/AddressForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { Input } from '@material-ui/core';\nimport { commerce } from '../../lib/commerce';\n\nconst AddressForm = ({checkoutToken}) => {\n    const [shippingCountries, setShippingCountries] = useState([])\n    const [shippingCountry, setShippingCountry] = useState('')\n    const [shippingSubdivisions, setshippingSubdivisions] = useState([])\n    const [shippingSubdivision, setshippingSubdivision] = useState('')\n    const [shippingOptions, setshippingOptions] = useState([])\n    const [shippingOption, setshippingOption] = useState('')\n\n    const methods = useForm();\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        console.log('asd',countries);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0])\n    }\n\n    useEffect(()=>{\n        fetchShippingCountries(checkoutToken.id)\n    },[])\n\n    return (\n        <>\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name' />\n                        <FormInput required name='lastName' label='Last name' />\n                        <FormInput required name='address1' label='Address' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='city' label='City' />\n                        <FormInput required name='zip' label='ZIP / Postal code' />\n                        {/* <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={ } fullWidth onChange={ }>\n                                <MenuItem key={ } value={ }>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={ } fullWidth onChange={ }>\n                                <MenuItem key={ } value={ }>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Option</InputLabel>\n                            <Select value={ } fullWidth onChange={ }>\n                                <MenuItem key={ } value={ }>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid> */}\n                    </Grid>\n                </form>\n            </FormProvider>\n        </>\n\n    )\n}\n\nexport default AddressForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}